{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setStarted","isReversed","setReversed","NONE","sortType","setSortType","goods","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAuBMC,EAzDR,SACEA,EACAF,EACAH,GAEA,IAAMM,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQN,GACN,KAAKT,EAASgB,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKf,EAASkB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,MAINb,EACHM,EAAaQ,UACbR,EAmCUS,CACZpB,EACAQ,EACAH,GAGF,OACE,sBAAKgB,UAAU,MAAf,WACIlB,GACA,wBACEmB,KAAK,SACLD,UAAU,uBACVE,QAjCS,WACfnB,GAAW,IA6BP,mBASDD,GACC,qCACE,sBAAKkB,UAAU,YAAf,UACE,wBACEC,KAAK,SACLD,UAAU,kCACVE,QArCc,WACxBd,EAAYV,EAASgB,WAiCb,iCAQA,wBACEO,KAAK,SACLD,UAAU,kCACVE,QAjDY,WACtBd,EAAYV,EAASkB,SA6Cb,4BAQA,wBACEK,KAAK,SACLD,UAAU,kCACVE,QAjDO,WACjBjB,GAAaD,IA6CL,qBAQA,wBACEiB,KAAK,SACLD,UAAU,wBACVE,QArDK,WACfd,EAAYV,EAASQ,MACrBD,GAAY,IAgDJ,sBASF,oBAAIe,UAAU,QAAd,SAEIX,EAAMc,KAAI,SAAAC,GAAI,OACZ,oBAAeJ,UAAU,cAAzB,SAAwCI,GAA/BA,eCtIzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f084a5f8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\n// type State = {\n//   isStarted: boolean,\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\nexport const App: React.FC = () => {\n  const [isStarted, setStarted] = useState(false);\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const startBtn = () => {\n    setStarted(true);\n  };\n\n  const sortByLengthBtn = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const sortByAlphabetBtn = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const reverseBtn = () => {\n    setReversed(!isReversed);\n  };\n\n  const resetBtn = () => {\n    setSortType(SortType.NONE);\n    setReversed(false);\n  };\n\n  const goods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  return (\n    <div className=\"App\">\n      {!isStarted && (\n        <button\n          type=\"button\"\n          className=\"Start button is-link\"\n          onClick={startBtn}\n        >\n          Start\n        </button>\n      )}\n\n      {isStarted && (\n        <>\n          <div className=\"Container\">\n            <button\n              type=\"button\"\n              className=\"btn btn-focus button is-primary\"\n              onClick={sortByAlphabetBtn}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"btn btn-focus button is-primary\"\n              onClick={sortByLengthBtn}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"btn btn-focus button is-primary\"\n              onClick={reverseBtn}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"btn button is-primary\"\n              onClick={resetBtn}\n            >\n              Reset\n            </button>\n          </div>\n\n          <ul className=\"Goods\">\n            {\n              goods.map(good => (\n                <li key={good} className=\"Goods__item\">{good}</li>\n              ))\n            }\n          </ul>\n\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}